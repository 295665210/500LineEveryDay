<Window x:Class="LearnWpfMVVM.ExportFamilys.ExportFamilyMainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:LearnWpfMVVM"
        mc:Ignorable="d"
        Title="批量导出族" Height="700" Width="400" WindowStartupLocation="CenterScreen"
        ResizeMode="NoResize">
    <Window.Resources>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#CEEAF9" />
        <Style TargetType="Button">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="buttonBorder" BorderBrush="Black" BorderThickness="2" CornerRadius="5"
                                TextBlock.FontWeight="Normal" TextBlock.Foreground="Black" TextBlock.FontSize="16">
                            <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="buttonBorder" Property="Background"
                                        Value="{StaticResource Button.Static.Border}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <SolidColorBrush x:Key="TextBox.Static.Border" Color="#FFABAdB3" />
        <SolidColorBrush x:Key="TextBox.MouseOver.Border" Color="#FF7EB4EA" />
        <SolidColorBrush x:Key="TextBox.Focus.Border" Color="#DC143C" />
        <Style x:Key="TextBoxStyle" TargetType="{x:Type TextBox}">
            <Setter Property="BorderBrush" Value="Black" />
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="BorderThickness" Value="2" />
            <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
            <Setter Property="HorizontalContentAlignment" Value="Left" />
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="AllowDrop" Value="true" />
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
            <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="5"
                                SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false"
                                          HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" TargetName="border" Value="0.56" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="BorderBrush" TargetName="border"
                                        Value="{StaticResource TextBox.MouseOver.Border}" />
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="true">
                                <Setter Property="BorderBrush" TargetName="border"
                                        Value="{StaticResource TextBox.Focus.Border}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="ListBorder" Color="Black" />
        <Style x:Key="TreeViewStyle" TargetType="{x:Type TreeView}">
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
            <Setter Property="BorderBrush" Value="{StaticResource ListBorder}" />
            <Setter Property="BorderThickness" Value="2" />
            <Setter Property="Padding" Value="1" />
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
            <Setter Property="ScrollViewer.PanningMode" Value="Both" />
            <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TreeView}">
                        <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="true" CornerRadius="10">
                            <ScrollViewer Margin="5" x:Name="_tv_scrollviewer_"
                                          Background="{TemplateBinding Background}" CanContentScroll="false"
                                          Focusable="false"
                                          HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                                          Padding="{TemplateBinding Padding}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}">
                                <ItemsPresenter />
                            </ScrollViewer>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="Bd"
                                        Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
                            </Trigger>
                            <Trigger Property="VirtualizingPanel.IsVirtualizing" Value="true">
                                <Setter Property="CanContentScroll" TargetName="_tv_scrollviewer_" Value="true" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="0.6*" />
            <RowDefinition Height="6*" />
            <!--<RowDefinition Height="0.5*"/>-->
            <RowDefinition Height="0.8*" />
        </Grid.RowDefinitions>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="0.8*" />
                <ColumnDefinition Width="0.3*" />
            </Grid.ColumnDefinitions>
            <TextBox Text="{Binding FilePath,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                     Margin="10,14" Padding="2" Style="{DynamicResource TextBoxStyle}" />
            <Button Name="selectPath" Grid.Column="1" Margin="10,14" Content="选择路径"
                    Command="{Binding SelectPathCommand}" />
        </Grid>
        <TreeView Grid.Row="1" Margin="10" Name="familyTree" ItemsSource="{Binding Items}"
                  Style="{DynamicResource TreeViewStyle}">
            <TreeView.ItemTemplate>
                <HierarchicalDataTemplate ItemsSource="{Binding Children}">
                    <StackPanel Orientation="Horizontal">
                        <CheckBox IsChecked="{Binding IsChecked,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" />
                        <TextBlock Text="{Binding Header}" />
                    </StackPanel>
                </HierarchicalDataTemplate>
            </TreeView.ItemTemplate>
        </TreeView>
        <!--<StackPanel Grid.Row="2" Orientation="Vertical" VerticalAlignment="Center">
            <TextBlock Height="30"  Width="370" Margin="5,0,0,0" Text="{Binding Content}"/>
        </StackPanel>-->
        <Grid Grid.Row="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition />
                <ColumnDefinition />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <Button x:Name="selectALL" Content="全选"
                    Command="{Binding SelectAllCommand}" Margin="35,20" />
            <Button Grid.Column="1" x:Name="selectNone" Content="反选"
                    Command="{Binding SelectNoneCommand}" Margin="35,20" />
            <Button Grid.Column="2" x:Name="startBTN"
                    Content="开始导出" Command="{Binding StartExportCommand}" Margin="25,20" />
            <Button Grid.Column="3" x:Name="StartTest"
                    Content="创建墙的测试" Command="{Binding CreateWallCommand}" Margin="25,20" />
        </Grid>
    </Grid>
</Window>